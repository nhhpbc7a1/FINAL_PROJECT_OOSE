<!-- Doctor List Section -->
<link rel="stylesheet" href="/public/css/admin-side/doctor-list.css">

<div class="patient-list-container">
    <div class="filters-bar">
        <div class="filters-group">
            <select class="form-control form-control-sm" id="specialtyFilter">
                <option value="">All Specialties</option>
                {{#each specialties}}
                <option value="{{specialtyId}}">{{name}}</option>
                {{/each}}
            </select>
            
            <select class="form-control form-control-sm" id="statusFilter">
                <option value="">All Status</option>
                <option value="active">Active</option>
                <option value="inactive">Inactive</option>
            </select>
        </div>
        
        <div>
        <div class="search-box">
                <input type="text" class="form-control form-control-sm" id="searchInput" placeholder="Search doctors...">
            <i class="fas fa-search"></i>
        </div>
    </div>

        <a href="/admin/doctors/add" class="add-new-btn">
            <i class="fas fa-plus"></i> Add New Doctor
        </a>
    </div>

    <!-- Doctor Table -->
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">Doctor</th>
                    <th scope="col">ID</th>
                    <th scope="col">Specialty</th>
                    <th scope="col">Experience</th>
                    <th scope="col">Status</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody id="doctor-table-body">
                {{#each doctors}}
                <tr class="doctor-row" 
                    data-id="{{doctorId}}"
                    data-specialty="{{specialtyId}}" 
                    data-status="{{toLowerCase accountStatus}}" 
                    data-name="{{toLowerCase fullName}}" 
                    data-email="{{toLowerCase email}}" 
                    data-license="{{toLowerCase licenseNumber}}">
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="avatar-circle">
                                <span>{{initials}}</span>
                            </div>
                            <div class="ml-3">
                                <div class="patient-name">{{fullName}}</div>
                                <div class="patient-details">{{email}} • {{phoneNumber}}</div>
                            </div>
                        </div>
                    </td>
                    <td>{{licenseNumber}}</td>
                    <td>{{specialtyName}}</td>
                    <td>{{experience}} years</td>
                    <td>
                        <span class="status-badge status-{{toLowerCase accountStatus}}">{{accountStatus}}</span>
                    </td>
                    <td>
                        <div class="action-buttons">
                            <a href="/admin/doctors/view/{{doctorId}}" class="btn btn-icon" title="View Profile" style="display: none;">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="/admin/doctors/edit/{{doctorId}}" class="btn btn-icon" title="Edit Doctor">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="#" class="btn btn-icon delete-doctor" title="Delete Doctor" data-toggle="modal" data-target="#deleteModal" data-id="{{doctorId}}">
                                <i class="fas fa-trash-alt text-danger"></i>
                            </a>
                        </div>
                    </td>
                </tr>
                {{/each}}
                <tr id="no-results-row" style="display: none;">
                    <td colspan="6">
                        <div class="empty-state">
                            <i class="fas fa-search"></i>
                            <h5>No doctors found</h5>
                            <p>No doctors match your search criteria. Try adjusting your filters.</p>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    
    <!-- Pagination -->
    <div class="pagination-container">
        <div class="page-info">
            Showing <span id="showing-start">1</span> to <span id="showing-end">10</span> of <span id="total-items">{{totalDoctors}}</span> doctors
        </div>
        <ul class="pagination" id="pagination">
            <!-- Pagination will be generated by JavaScript -->
        </ul>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this doctor? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

{{#if error}}
<div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
    {{error}}
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
{{/if}}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Lưu trữ tất cả dữ liệu bác sĩ
        const allDoctors = Array.from(document.querySelectorAll('.doctor-row'));
        
        // Cấu hình phân trang
        const itemsPerPage = 10;
        let currentPage = 1;
        let filteredDoctors = [...allDoctors];
        
        // DOM elements
        const specialtyFilter = document.getElementById('specialtyFilter');
        const statusFilter = document.getElementById('statusFilter');
        const searchInput = document.getElementById('searchInput');
        const doctorTableBody = document.getElementById('doctor-table-body');
        const noResultsRow = document.getElementById('no-results-row');
        const pagination = document.getElementById('pagination');
        const showingStart = document.getElementById('showing-start');
        const showingEnd = document.getElementById('showing-end');
        const totalItems = document.getElementById('total-items');
        
        // Apply filter khi người dùng thay đổi
        specialtyFilter.addEventListener('change', applyFilters);
        statusFilter.addEventListener('change', applyFilters);
        
        // Tìm kiếm theo thời gian thực khi người dùng nhập
        let searchTimeout;
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(applyFilters, 300);
        });
        
        // Xử lý xóa bác sĩ
        let doctorIdToDelete = null;
        const confirmDeleteBtn = document.getElementById('confirmDelete');
        
        document.querySelectorAll('.delete-doctor').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                doctorIdToDelete = this.getAttribute('data-id');
            });
        });
        
        confirmDeleteBtn.addEventListener('click', function() {
            if (doctorIdToDelete) {
                // Gửi request xóa bác sĩ (có thể chuyển sang một phương thức ajax thực sự sau này)
                alert(`Doctor with ID ${doctorIdToDelete} would be deleted with a real AJAX request`);
                
                // Ẩn hàng trong bảng
                const doctorRow = document.querySelector(`.doctor-row[data-id="${doctorIdToDelete}"]`);
                if (doctorRow) {
                    doctorRow.remove();
                    
                    // Cập nhật lại danh sách bác sĩ
                    filteredDoctors = filteredDoctors.filter(row => 
                        row.getAttribute('data-id') !== doctorIdToDelete
                    );
                    
                    // Cập nhật lại phân trang
                    updatePagination();
                }
                
                // Đóng modal
                $('#deleteModal').modal('hide');
            }
        });
        
        // Hàm filter dữ liệu
        function applyFilters() {
            const specialty = specialtyFilter.value.toLowerCase();
            const status = statusFilter.value.toLowerCase();
            const searchTerm = searchInput.value.trim().toLowerCase();
            
            // Filter dữ liệu bác sĩ dựa trên các tiêu chí
            filteredDoctors = allDoctors.filter(row => {
                // Filter theo specialty
                if (specialty && row.getAttribute('data-specialty') !== specialty) {
                    return false;
                }
                
                // Filter theo status
                if (status && row.getAttribute('data-status') !== status) {
                    return false;
                }
                
                // Filter theo từ khóa tìm kiếm
                if (searchTerm) {
                    const doctorName = row.getAttribute('data-name') || '';
                    const doctorEmail = row.getAttribute('data-email') || '';
                    const licenseNumber = row.getAttribute('data-license') || '';
                    
                    return doctorName.includes(searchTerm) || 
                           doctorEmail.includes(searchTerm) || 
                           licenseNumber.includes(searchTerm);
                }
                
                return true;
            });
            
            // Reset về trang đầu tiên khi filter
            currentPage = 1;
            
            // Cập nhật hiển thị
            updateDisplay();
        }
        
        // Cập nhật hiển thị bảng và phân trang
        function updateDisplay() {
            // Ẩn tất cả các hàng bác sĩ
            allDoctors.forEach(row => {
                row.style.display = 'none';
            });
            
            // Hiển thị thông báo "Không tìm thấy" nếu không có kết quả
            if (filteredDoctors.length === 0) {
                noResultsRow.style.display = 'table-row';
                
                // Cập nhật thông tin phân trang
                showingStart.textContent = '0';
                showingEnd.textContent = '0';
                totalItems.textContent = '0';
                
                // Xóa phân trang
                pagination.innerHTML = '';
                return;
            } else {
                noResultsRow.style.display = 'none';
            }
            
            // Tính toán phân trang
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = Math.min(startIndex + itemsPerPage, filteredDoctors.length);
            
            // Hiển thị các hàng cho trang hiện tại
            for (let i = startIndex; i < endIndex; i++) {
                filteredDoctors[i].style.display = 'table-row';
            }
            
            // Cập nhật thông tin phân trang
            showingStart.textContent = filteredDoctors.length ? startIndex + 1 : 0;
            showingEnd.textContent = endIndex;
            totalItems.textContent = filteredDoctors.length;
            
            // Cập nhật UI phân trang
            updatePagination();
        }
        
        // Cập nhật UI phân trang
        function updatePagination() {
            // Tính tổng số trang
            const totalPages = Math.ceil(filteredDoctors.length / itemsPerPage);
            
            // Tạo HTML cho phân trang
            let paginationHTML = '';
            
            // Nút Previous
            paginationHTML += `
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" data-page="${currentPage - 1}" ${currentPage === 1 ? 'aria-disabled="true"' : ''}>Previous</a>
                </li>
            `;
            
            // Các nút số trang
            for (let i = 1; i <= totalPages; i++) {
                paginationHTML += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>
                `;
            }
            
            // Nút Next
            paginationHTML += `
                <li class="page-item ${currentPage === totalPages || totalPages === 0 ? 'disabled' : ''}">
                    <a class="page-link" href="#" data-page="${currentPage + 1}" ${currentPage === totalPages || totalPages === 0 ? 'aria-disabled="true"' : ''}>Next</a>
                </li>
            `;
            
            // Cập nhật HTML phân trang
            pagination.innerHTML = paginationHTML;
            
            // Thêm event listeners cho các nút phân trang
            document.querySelectorAll('.pagination .page-link').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Chỉ xử lý khi nút không bị disabled
                    if (!this.parentElement.classList.contains('disabled')) {
                        currentPage = parseInt(this.getAttribute('data-page'));
                        updateDisplay();
                    }
                });
            });
        }
        
        // Khởi tạo hiển thị ban đầu
        updateDisplay();
    });
</script>

<!-- Remove sample data script -->
