<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor Dashboard</title>
  <link rel="stylesheet" href="/public/css/doctor-layout.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.css" rel="stylesheet">
  <!-- Tabler Icons CDN -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@2.40.0/tabler-icons.min.css">
</head>
<body>
  <div class="container">
     <aside class="sidebar" id="sidebar">
      <div class="sidebar-header">
        <div class="logo">
          <img src="/public/images/logo/logo.png" alt="Logo page">
          <p>EternalCare</p>
        </div>
      </div>
      
      <button id="toggleSidebar" class="toggle-sidebar">
        <i class="ti ti-chevron-left"></i>
      </button>
      
      <div class="my-menu">
        My menu
        <i class="ti ti-dots"></i>
      </div>
      
      <div class="menu">
        <ul>
          <li class="active">
            <a href="/doctor/dashboard">
              <span>
                <i class="ti ti-dashboard"></i>
                <span>Dashboard</span>
              </span>
            </a>
          </li>
          <li>
            <a href="/doctor/appointments">
              <span>
                <i class="ti ti-calendar-event"></i>
                <span>Appointments</span>
              </span>
              <span class="badge">{{appointmentCount}}</span>
            </a>
          </li>
          <li>
            <a href="/doctor/patients">
              <span>
                <i class="ti ti-users"></i>
                <span>Patients</span>
              </span>
            </a>
          </li>
          <li>
            <a href="/doctor/messages">
              <span>
                <i class="ti ti-messages"></i>
                <span>Notifications</span>
              </span>
              {{#if unreadCount}}
              <span class="badge">{{unreadCount}}</span>
              {{/if}}
            </a>
          </li>
          <li>
            <a href="/doctor/profile">
              <span>
                <i class="ti ti-user-circle"></i>
                <span>Profile</span>
              </span>
            </a>
          </li>
          <li>
            <a href="/doctor/settings">
              <span>
                <i class="ti ti-settings"></i>
                <span>Settings</span>
              </span>
            </a>
          </li>
          <li>
            <a href="/logout">
              <span>
                <i class="ti ti-logout"></i>
                <span>Logout</span>
              </span>
            </a>
          </li>
        </ul>
      </div>
    </aside>

    <main class="main">
      <header class="header">
        <div class="page-info">
          <h1 class="page-title" id="currentPageTitle">Dashboard</h1>
          <span class="page-subtitle" id="currentPageSubtitle">Welcome back, Dr. TobeyNguyen</span>
        </div>
        
        <div class="header-actions">
          <div class="action-button" data-tooltip="Patient Records">
            <i class="ti ti-notes"></i>
          </div>
          <div id="notificationIcon" class="notification" data-tooltip="Notifications">
            <i class="ti ti-bell"></i>
            {{#if unreadCount}}
            <div class="notification-badge">{{unreadCount}}</div>
            {{/if}}
          </div>
        </div>
        
        <div class="header-divider"></div>
        
        <div class="profile">
          <img src="/api/placeholder/40/40" alt="Profile" />
          <div class="profile-info">
            <span class="profile-name">Dr TobeyNguyen</span>
            <span class="profile-role">Urologist</span>
          </div>
          <i class="ti ti-chevron-down"></i>
        </div>
      </header>

      <div class="content-container">
        {{{body}}}
      </div>
    </main>
  </div>
   <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js"></script>

   <script>
    // Add active class to current page link
    document.addEventListener('DOMContentLoaded', function() {
      const currentPath = window.location.pathname;
      const menuLinks = document.querySelectorAll('.menu li a');
      const mainElement = document.querySelector('.main');
      
      // Update page title and subtitle based on current path
      updatePageInfo(currentPath);
      
      menuLinks.forEach(link => {
        if (link.getAttribute('href') === currentPath || 
            (currentPath.includes(link.getAttribute('href')) && link.getAttribute('href') !== '/')) {
          link.parentElement.classList.add('active');
       } else {
          link.parentElement.classList.remove('active');
        }
      });
      
      // Toggle sidebar
      const toggleBtn = document.getElementById('toggleSidebar');
      const sidebar = document.getElementById('sidebar');
      
      toggleBtn.addEventListener('click', function() {
        sidebar.classList.toggle('collapsed');
        // Icon rotation is now handled by CSS
      });
      
      // Setup action buttons
      setupActionButtons();
      
      // Initialize notification popup if exists
      setupNotificationPopup();
      
      // Header scroll effect
      const contentContainer = document.querySelector('.content-container');
      if (contentContainer && mainElement) {
        contentContainer.addEventListener('scroll', function() {
          if (this.scrollTop > 20) {
            mainElement.classList.add('scrolled');
          } else {
            mainElement.classList.remove('scrolled');
          }
        });
      }
    });
    
    function updatePageInfo(currentPath) {
      const pageTitle = document.getElementById('currentPageTitle');
      const pageSubtitle = document.getElementById('currentPageSubtitle');
      
      if (!pageTitle || !pageSubtitle) return;
      
      let title = 'Dashboard';
      let subtitle = 'Welcome back, Dr. TobeyNguyen';
      
      if (currentPath.includes('/doctor/dashboard')) {
        title = 'Dashboard';
        subtitle = 'Your overview and statistics';
      } else if (currentPath.includes('/doctor/appointments')) {
        title = 'Appointments';
        subtitle = 'Manage your patient appointments';
      } else if (currentPath.includes('/doctor/patients')) {
        title = 'Patients';
        subtitle = 'View and manage patient records';
      } else if (currentPath.includes('/doctor/messages')) {
        title = 'Notifications';
        subtitle = 'Your messages and alerts';
      } else if (currentPath.includes('/doctor/profile')) {
        title = 'Profile';
        subtitle = 'Manage your personal information';
      } else if (currentPath.includes('/doctor/settings')) {
        title = 'Settings';
        subtitle = 'Customize your preferences';
      }
      
      pageTitle.textContent = title;
      pageSubtitle.textContent = subtitle;
    }
    
    function setupActionButtons() {
      const actionButtons = document.querySelectorAll('.action-button');
      if (!actionButtons.length) return;
      
      // Setup action for medical notes button
      const notesButton = actionButtons[0];
      if (notesButton) {
        notesButton.addEventListener('click', function() {
          window.location.href = '/doctor/patients';
        });
      }
    }
    
    function setupNotificationPopup() {
       const notificationIcon = document.getElementById('notificationIcon');
       const notificationPopup = document.getElementById('headerNotificationPopup');
       
       if (notificationIcon && notificationPopup) {
         const closePopupBtn = document.getElementById('closeHeaderPopupBtn');
         
         // Toggle popup on notification icon click
         notificationIcon.addEventListener('click', function(e) {
           e.stopPropagation();
           
           // Toggle display
           if (notificationPopup.style.display === 'block') {
             notificationPopup.style.display = 'none';
           } else {
             notificationPopup.style.display = 'block';
             
             // Load notifications via AJAX
             fetchNotifications();
           }
         });
         
         // Close popup when clicking the close button
         closePopupBtn.addEventListener('click', function() {
           notificationPopup.style.display = 'none';
         });
         
         // Close popup when clicking outside
         document.addEventListener('click', function(e) {
           if (notificationPopup.style.display === 'block' && 
               !notificationPopup.contains(e.target) && 
               !notificationIcon.contains(e.target)) {
             notificationPopup.style.display = 'none';
           }
         });
       }
     }
     
     // Fetch notifications for the popup
     function fetchNotifications() {
       fetch('/doctor/notifications/recent')
         .then(response => response.json())
         .then(data => {
           const container = document.getElementById('headerPopupNotifications');
           
           if (!container) return;
           
           if (data.notifications && data.notifications.length > 0) {
             let html = '';
             
             data.notifications.forEach(notification => {
               html += `
                 <div class="popup-notification-item${!notification.read ? ' unread' : ''}">
                   <div class="popup-notification-content">
                     <h4>${notification.title}</h4>
                     <p>${notification.message}</p>
                     <small>${notification.formattedDate}</small>
                   </div>
                   ${!notification.read ? `
                   <button class="popup-mark-read-btn" data-id="${notification.id}" title="Mark as read">
                     <i class="ti ti-check"></i>
                   </button>
                   ` : ''}
                 </div>
               `;
             });
             
             container.innerHTML = html;
             
             // Add event listeners for mark as read buttons
             const markReadBtns = container.querySelectorAll('.popup-mark-read-btn');
             markReadBtns.forEach(btn => {
               btn.addEventListener('click', function(e) {
                 e.stopPropagation();
                 const notificationId = this.getAttribute('data-id');
                 
                 fetch(`/doctor/notifications/${notificationId}/mark-read`, {
                   method: 'POST',
                   headers: {
                     'Content-Type': 'application/json',
                   }
                 })
                 .then(response => response.json())
                 .then(data => {
                   if (data.success) {
                     this.parentElement.classList.remove('unread');
                     this.remove();
                     
                     // Update badge count
                     const badge = document.querySelector('.notification-badge');
                     if (badge) {
                       const count = parseInt(badge.textContent) - 1;
                       if (count <= 0) {
                         badge.remove();
                       } else {
                         badge.textContent = count;
                       }
           }
         }
       });
     });
             });
           } else {
             container.innerHTML = '<div class="empty-popup-state"><p>No new notifications</p></div>';
           }
         })
         .catch(error => {
           console.error('Error fetching notifications:', error);
           const container = document.getElementById('headerPopupNotifications');
           if (container) {
             container.innerHTML = '<div class="empty-popup-state"><p>Failed to load notifications</p></div>';
           }
         });
     }
  </script>

<div id="headerNotificationPopup" class="notification-popup" style="display: none;">
  <div class="notification-popup-header">
    <h3>Notifications</h3>
    <button id="closeHeaderPopupBtn">
      <i class="ti ti-x"></i>
    </button>
  </div>
  <div id="headerPopupNotifications" class="popup-notification-list">
    <div class="empty-popup-state">
      <p>Loading notifications...</p>
    </div>
  </div>
  <div class="popup-footer">
    <a href="/doctor/messages" class="view-all-link">View all notifications</a>
  </div>
</div>
</body>
</html>