<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor Appointment</title>
  <link rel="stylesheet" href="/public/css/doctor-side/Appointment.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>
<body>
  <div class="container">
      <div class="content-container">
        <!-- Left Column -->
        <div class="left-column">
          <div class="appointment-container">
            <div class="date-filter">
              <div class="date-input">
                <input id="datepicker" type="text" placeholder="{{selectedDate}}" value="{{selectedDate}}" />
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M19 4H18V2H16V4H8V2H6V4H5C3.89 4 3.01 4.9 3.01 6L3 20C3 21.1 3.89 22 5 22H19C20.1 22 21 21.1 21 20V6C21 4.9 20.1 4 19 4ZM19 20H5V9H19V20Z" fill="#6c757d"/>
                </svg>
              </div>  
              <button class="view-btn" id="viewBtn">View</button>
              <button class="filter-btn">Filter</button>
            </div>
           <div class="appointment-date" id="appointmentDateText">{{formattedDate}}</div>
            
            {{#if error}}
              <div class="error-message">{{error}}</div>
            {{else}}
              {{#if hasAppointments}}
                <div class="appointments-list">
                {{#each appointments}}
                  <div class="appointment-card {{#if (eq appointmentId ../selectedAppointment.appointmentId)}}active{{/if}}" data-id="{{appointmentId}}">
                    <div class="appointment-time">{{timeFormatted}}</div>
                    <div class="patient-name">{{patientName}}</div>
                    <div class="appointment-type">{{reason}}</div>
                    <div class="appointment-location">{{specialtyName}} - Room {{roomNumber}}</div>
                    <div class="appointment-status status-{{patientAppointmentStatus}}">{{patientAppointmentStatus}}</div>
                    <div class="appointment-number">{{appointmentNumber}}</div>
                  </div>
                {{/each}}
                </div>
              {{else}}
                <div class="no-appointments">
                  <p>No appointments scheduled for this date.</p>
                </div>
              {{/if}}
            {{/if}}
          </div>
        </div>
        
        <!-- Right Column -->
        <div class="right-column">
         <div class="appointment-details">
            <div class="details-header">
              <div class="details-title">Appointment Details</div>
              {{#if selectedAppointment}}
              <button class="print-btn">Print</button>
              {{/if}}
            </div>
            
            {{#if selectedAppointment}}
            <div class="tabs">
              <button class="tab tab-btn active">Patient info</button> 
              <button class="tab tab-btn">Medical History</button>
              <button class="tab tab-btn">Previous Visits</button>
            </div>
            
            <div class="patient-profile">
              <div class="patient-avatar">{{selectedAppointment.patientName.[0]}}</div>
              <div>
                <div class="patient-name">{{selectedAppointment.patientName}}</div>
                <div class="patient-id">Patient ID: P-{{selectedAppointment.patientId}}</div>
                <div class="patient-meta">
                  <span>{{selectedAppointment.patientAge}} years old</span>
                  <span>{{selectedAppointment.patientGenderFormatted}}</span>
                  <span>Phone: {{selectedAppointment.patientPhone}}</span>
                </div>
              </div>
              <a href="/doctor/patient-details?patientId={{selectedAppointment.patientId}}" class="patient-details-btn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12ZM12 14C9.33 14 4 15.34 4 18V20H20V18C20 15.34 14.67 14 12 14Z" fill="#0D99FF"/>
                </svg>
                Patient Details
              </a>
            </div>
            
            <div class="appointment-info">
              <div class="info-title">Appointment Information</div>
              <div class="info-grid">
                <div class="info-field">
                  <div class="field-label">Appointment Date</div>
                  <div class="field-value">{{selectedAppointment.dateFormatted}}</div>
                </div>
                <div class="info-field">
                  <div class="field-label">Appointment Time</div>
                  <div class="field-value">{{selectedAppointment.timeRangeFormatted}}</div>
                </div>
                <div class="info-field">
                  <div class="field-label">Appointment Type</div>
                  <div class="field-value">{{selectedAppointment.reason}}</div>
                </div>
                <div class="info-field">
                  <div class="field-label">Department</div>
                  <div class="field-value">{{selectedAppointment.specialtyName}}</div>
                </div>
                <div class="info-field">
                  <div class="field-label">Room</div>
                  <div class="field-value">Room {{selectedAppointment.roomNumber}}</div>
                </div>
                <div class="info-field status-field">
                  <div class="field-label">Status</div>
                  <div class="field-value status-{{selectedAppointment.patientAppointmentStatus}}">{{selectedAppointment.patientAppointmentStatus}}</div>
                </div>
              </div>
              
              <div class="contact-info">
                <div class="info-title">Contact information</div>
                <div class="info-grid">
                  <div class="info-field">
                    <div class="field-label">Phone Number</div>
                    <div class="field-value">{{selectedAppointment.patientPhone}}</div>
                  </div>
                  <div class="info-field">
                    <div class="field-label">Email</div>
                    <div class="field-value">{{selectedAppointment.email}}</div>
                  </div>
                </div>
              </div>
              
              <a href="/doctor/examination?appointmentId={{selectedAppointment.appointmentId}}" id="examinationBtn" class="action-btn">Examination</a>
              
  
            </div>
            {{else}}
            <div class="no-appointment-selected">
              <p>Select an appointment from the list to view details</p>
            </div>
            {{/if}}
          </div>
        </div>
      </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
  <script>
    // Debug datepicker values
    console.log("Initial date from server:", "{{selectedDate}}");
    
    // Initialize date picker with consistent formats
    const fp = flatpickr("#datepicker", {
      dateFormat: "Y-m-d", // Keep internal format as YYYY-MM-DD
      defaultDate: "{{selectedDate}}",
      allowInput: true,
      altInput: true,
      altFormat: "d/m/Y", // Show as DD/MM/YYYY
      onReady: function(selectedDates, dateStr, instance) {
        console.log("Datepicker initialized with date:", dateStr, "and internal value:", instance.input.value);
        
        // Make sure the date is properly displayed on page load
        if (selectedDates.length > 0) {
          const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
          const formatted = selectedDates[0].toLocaleDateString('en-US', options);
          document.getElementById("appointmentDateText").textContent = formatted;
        }
      },
      onChange: function(selectedDates, dateStr, instance) {
        console.log("Date changed to:", dateStr, "and internal value:", instance.input.value);
        
        if (selectedDates.length > 0) {
          const selectedDate = selectedDates[0];
          // Format date for display
          const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
          const formatted = selectedDate.toLocaleDateString('en-US', options);
          document.getElementById("appointmentDateText").textContent = formatted;
        }
      }
    });

    // View button functionality
    document.getElementById('viewBtn').addEventListener('click', function() {
      // Get the internal value which should be in YYYY-MM-DD format
      const internalDate = fp.input.value;
      const displayDate = document.querySelector(".flatpickr-input.flatpickr-input").value;
      
      console.log("View button clicked. Input value:", internalDate);
      console.log("Display value:", displayDate);
      
      // Format date as YYYY-MM-DD
      let dateToUse = internalDate;
      
      // If using the display format (DD/MM/YYYY), convert it
      if (displayDate.includes('/') && displayDate.split('/').length === 3) {
        const parts = displayDate.split('/');
        // Assume it's in DD/MM/YYYY format
        dateToUse = `${parts[2]}-${parts[1].padStart(2, '0')}-${parts[0].padStart(2, '0')}`;
        console.log("Converted date:", dateToUse);
      }
      
      window.location.href = `/doctor/appointments?date=${dateToUse}`;
    });

    // Make appointment cards clickable
    document.querySelectorAll('.appointment-card').forEach(card => {
      card.addEventListener('click', function() {
        const appointmentId = this.getAttribute('data-id');
        const currentDate = fp.input.value; // Use internal YYYY-MM-DD format
        
        // Highlight the selected card
        document.querySelectorAll('.appointment-card').forEach(c => {
          c.classList.remove('active');
        });
        this.classList.add('active');
        
        // Load appointment details 
        window.location.href = `/doctor/appointments?date=${currentDate}&appointmentId=${appointmentId}`;
      });
    });

    // Tab switching functionality
    const tabs = document.querySelectorAll('.tab-btn');
    tabs.forEach(tab => {
      tab.addEventListener('click', function() {
        tabs.forEach(t => t.classList.remove('active'));
        this.classList.add('active');
      });
    });
    
    // Press Enter in datepicker to trigger view button
    document.getElementById('datepicker').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        document.getElementById('viewBtn').click();
      }
    });
  </script>
</body>
</html>